{"ast":null,"code":"var _jsxFileName = \"/Users/harry/Projects/portfolio/src/components/works.js\";\nimport React from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport ImageZoom from 'react-medium-image-zoom';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nexport var UCA = function UCA() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Universal claim app\"), React.createElement(\"p\", {\n    className: \"details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Client: Elsevier \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), \"Role: Sr UX Designer\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), \"Elsevier 2018\"), React.createElement(\"hr\", {\n    className: \"thick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    md: \"8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"About Elsevier\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Elsevier is  an information and analytics company and one of the world's major providers of scientific, technical and medical information. Elsevier publishes more than 430,000 articles annually in 2,500 journals. Total yearly downloads amount to more than 900 million.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Elsevier owns a big number of products which I\\u2019m going to refer to as the/an 'ecosystem'\")), React.createElement(Col, {\n    xs: \"12\",\n    md: \"8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"The challenge\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Every publishing author gets an an author ID after their first academic paper is submitted, accepted and consequently published through any of the Elsevier submission systems.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Data about users is not shared across products; the same user can register using different login details on each of Elsevier products.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"In addition, we can\\u2019t automatically connect accounts to IDs as we are dealing with very sensitive information and a bad use of it might cause significant damage to the user's academic career.\")), React.createElement(Col, {\n    xs: \"12\",\n    md: \"8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"The Brief\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"We are going to build a universal app for Elsevier users. In this app they will be able to search for their ID and claim their author profile. This will allow us to connect all their Elsevier accounts.\")), React.createElement(Col, {\n    xs: \"12\",\n    md: \"8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Gathering requirements\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"I ran workshops with colleagues from different products, developers, project managers, etc. Each Elsevier product has its own way of operatating, its own unique users and I needed to understand what other teams worked on in the past. I needed them to tell me what their users were like before I could come up with my own research plan.\"), React.createElement(ImageZoom, {\n    image: {\n      src: \"\".concat(process.env.PUBLIC_URL, \"/postit-small.jpg\"),\n      alt: 'Golden Gate Bridge',\n      className: 'img',\n      style: {\n        width: '100%'\n      }\n    },\n    zoomImage: {\n      src: \"\".concat(process.env.PUBLIC_URL, \"/postit.jpg\"),\n      alt: 'Golden Gate Bridge'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    md: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(ImageZoom, {\n    image: {\n      src: \"\".concat(process.env.PUBLIC_URL, \"/postit-small.jpg\"),\n      alt: 'Golden Gate Bridge',\n      className: 'img',\n      style: {\n        width: '100%'\n      }\n    },\n    zoomImage: {\n      src: \"\".concat(process.env.PUBLIC_URL, \"/postit.jpg\"),\n      alt: 'Golden Gate Bridge'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: \"12\",\n    md: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(ImageZoom, {\n    image: {\n      src: \"\".concat(process.env.PUBLIC_URL, \"/postit-small.jpg\"),\n      alt: 'Golden Gate Bridge',\n      className: 'img',\n      style: {\n        width: '100%'\n      }\n    },\n    zoomImage: {\n      src: \"\".concat(process.env.PUBLIC_URL, \"/postit.jpg\"),\n      alt: 'Golden Gate Bridge'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))))));\n};\nexport var About = function About() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"About\"), React.createElement(\"hr\", {\n    className: \"thick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n};\nexport var Topics = function Topics(_ref) {\n  var match = _ref.match;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Topics\"), React.createElement(\"hr\", {\n    className: \"thick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"\".concat(match.url, \"/rendering\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Rendering with React\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"\".concat(match.url, \"/components\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Components\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"\".concat(match.url, \"/props-v-state\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Props v. State\"))), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:topicId\"),\n    component: Topic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: match.path,\n    render: function render() {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Please select a topic.\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }));\n};\nexport var Topic = function Topic(_ref2) {\n  var match = _ref2.match;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, match.params.topicId));\n};","map":{"version":3,"sources":["/Users/harry/Projects/portfolio/src/components/works.js"],"names":["React","Container","Row","Col","ImageZoom","BrowserRouter","Router","Route","Link","UCA","src","process","env","PUBLIC_URL","alt","className","style","width","About","Topics","match","url","path","Topic","params","topicId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport ImageZoom from 'react-medium-image-zoom'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nexport const UCA = () => {\n    return (\n        <div>\n          <h2>Universal claim app</h2>\n          <p className=\"details\">Client: Elsevier <br />\n          Role: Sr UX Designer<br />\n          Elsevier 2018</p>\n          <hr className=\"thick\"/>\n          <Row>\n            <Col xs=\"12\" md=\"8\">\n              <h3>About Elsevier</h3>\n              <p>Elsevier is  an information and analytics company and one of the world's major providers of scientific, technical and medical information. \n                Elsevier publishes more than 430,000 articles annually in 2,500 journals. Total yearly downloads amount to more than 900 million.</p>\n              <p>Elsevier owns a big number of products which I’m going to refer to as the/an 'ecosystem'</p>\n            </Col>\n            <Col xs=\"12\" md=\"8\">\n              <h3>The challenge</h3>\n              <p>Every publishing author gets an an author ID after their first academic paper is submitted, accepted and consequently published through any of the Elsevier submission systems.</p>\n              <p>Data about users is not shared across products; the same user can register using different login details on each of Elsevier products.</p>\n              <p>In addition, we can’t automatically connect accounts to IDs as we are dealing with very sensitive information and a bad use of it might cause significant damage to the user's academic career.</p>\n            </Col>\n            <Col xs=\"12\" md=\"8\">\n              <h3>The Brief</h3>\n              <p>We are going to build a universal app for Elsevier users. \n                In this app they will be able to search for their ID and claim their author profile. \n                This will allow us to connect all their Elsevier accounts. \n              </p>\n            </Col>\n            <Col xs=\"12\" md=\"8\">\n              <h3>Gathering requirements</h3>\n              <p>I ran workshops with colleagues from different products, developers, project managers, etc. \n                Each Elsevier product has its own way of operatating, its own unique users and I needed to understand what other teams worked on in the past.\n                I needed them to tell me what their users were like before I could come up with my own research plan. \n              </p>\n              <ImageZoom\n                image={{\n                  src: `${process.env.PUBLIC_URL}/postit-small.jpg`,\n                  alt: 'Golden Gate Bridge',\n                  className: 'img',\n                  style: { width: '100%' }\n                }}\n                zoomImage={{\n                  src: `${process.env.PUBLIC_URL}/postit.jpg`,\n                  alt: 'Golden Gate Bridge'\n                }}\n              />\n              <Row>\n                <Col xs=\"12\" md=\"7\">\n                  <ImageZoom\n                  image={{\n                    src: `${process.env.PUBLIC_URL}/postit-small.jpg`,\n                    alt: 'Golden Gate Bridge',\n                    className: 'img',\n                    style: { width: '100%' }\n                  }}\n                  zoomImage={{\n                    src: `${process.env.PUBLIC_URL}/postit.jpg`,\n                    alt: 'Golden Gate Bridge'\n                  }}\n                />\n                </Col>\n                <Col xs=\"12\" md=\"5\">\n                  <ImageZoom\n                  image={{\n                    src: `${process.env.PUBLIC_URL}/postit-small.jpg`,\n                    alt: 'Golden Gate Bridge',\n                    className: 'img',\n                    style: { width: '100%' }\n                  }}\n                  zoomImage={{\n                    src: `${process.env.PUBLIC_URL}/postit.jpg`,\n                    alt: 'Golden Gate Bridge'\n                  }}\n                />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </div>\n    );\n};\n  \nexport const About = () => {\n    return (\n      <div>\n        <h1>About</h1>\n        <hr className=\"thick\"/>\n      </div>\n    );\n};\n  \nexport const Topics = ({ match }) => {\n    return (\n      <div>\n        <h1>Topics</h1>\n        <hr className=\"thick\"/>\n        <ul>\n          <li>\n            <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n          </li>\n          <li>\n            <Link to={`${match.url}/components`}>Components</Link>\n          </li>\n          <li>\n            <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n          </li>\n        </ul>\n  \n        <Route path={`${match.path}/:topicId`} component={Topic} />\n        <Route\n          exact\n          path={match.path}\n          render={() => <h3>Please select a topic.</h3>}\n        />\n      </div>\n    );\n};\n  \nexport const Topic = ({ match }) => {\n    return (\n      <div>\n        <h3>{match.params.topicId}</h3>\n      </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}